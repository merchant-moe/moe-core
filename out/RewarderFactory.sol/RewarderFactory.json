{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RewarderFactory__InvalidRewarderType",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RewarderFactory__ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IBaseRewarder",
          "name": "rewarder",
          "type": "address"
        }
      ],
      "name": "RewarderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "contract IBaseRewarder",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "RewarderImplementationSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        }
      ],
      "name": "createRewarder",
      "outputs": [
        {
          "internalType": "contract IBaseRewarder",
          "name": "rewarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRewarderAt",
      "outputs": [
        {
          "internalType": "contract IBaseRewarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        }
      ],
      "name": "getRewarderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        }
      ],
      "name": "getRewarderImplementation",
      "outputs": [
        {
          "internalType": "contract IBaseRewarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBaseRewarder",
          "name": "rewarder",
          "type": "address"
        }
      ],
      "name": "getRewarderType",
      "outputs": [
        {
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "enum IRewarderFactory.RewarderType[]",
          "name": "initialRewarderTypes",
          "type": "uint8[]"
        },
        {
          "internalType": "contract IBaseRewarder[]",
          "name": "initialRewarders",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRewarderFactory.RewarderType",
          "name": "rewarderType",
          "type": "uint8"
        },
        {
          "internalType": "contract IBaseRewarder",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "setRewarderImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b610e14806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80639e9dccb611610081578063e30c39781161005b578063e30c3978146101b6578063e6300a03146101be578063f2fde38b146101d157600080fd5b80639e9dccb614610157578063cd23517814610190578063cdffa538146101a357600080fd5b806372bdf244116100b257806372bdf2441461013457806379ba5097146101475780638da5cb5b1461014f57600080fd5b806316bc54b3146100d95780633628896a14610109578063715018a61461012a575b600080fd5b6100ec6100e7366004610bb5565b6101e4565b6040516001600160a01b0390911681526020015b60405180910390f35b61011c610117366004610bf4565b610274565b604051908152602001610100565b6101326102b4565b005b6100ec610142366004610c16565b6102c8565b61013261032c565b6100ec610379565b610183610165366004610c40565b6001600160a01b031660009081526002602052604090205460ff1690565b6040516101009190610c73565b6100ec61019e366004610bf4565b6103ae565b6101326101b1366004610c9b565b6103f6565b6100ec61040c565b6101326101cc366004610d1e565b610435565b6101326101df366004610c40565b6105d1565b600060028460038111156101fa576101fa610c5d565b1461020757610207610656565b610212848484610688565b905081836001600160a01b031685600381111561023157610231610c5d565b6040516001600160a01b03851681527f9f6902c2aefd6fe22828245dde3226eb65e7633ffcdee0e32948a4e541f91dd89060200160405180910390a49392505050565b60006001600083600381111561028c5761028c610c5d565b600381111561029d5761029d610c5d565b815260208101919091526040016000205492915050565b6102bc610656565b6102c660006108d3565b565b6000600160008460038111156102e0576102e0610c5d565b60038111156102f1576102f1610c5d565b8152602001908152602001600020828154811061031057610310610da1565b6000918252602090912001546001600160a01b03169392505050565b338061033661040c565b6001600160a01b03161461036d5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610376816108d3565b50565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60008060008360038111156103c5576103c5610c5d565b60038111156103d6576103d6610c5d565b81526020810191909152604001600020546001600160a01b031692915050565b6103fe610656565b610408828261090b565b5050565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0061039e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156104805750825b905060008267ffffffffffffffff16600114801561049d5750303b155b9050811580156104ab575080155b156104c95760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104fd57845468ff00000000000000001916680100000000000000001785555b6105068a6109cf565b8760005b81811015610578576105688b8b8381811061052757610527610da1565b905060200201602081019061053c9190610bf4565b8a8a8481811061054e5761054e610da1565b90506020020160208101906105639190610c40565b61090b565b61057181610db7565b905061050a565b505083156105c557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6105d9610656565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825561061d610379565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b3361065f610379565b6001600160a01b0316146102c65760405163118cdaa760e01b8152336004820152602401610364565b60008084600381111561069d5761069d610c5d565b036106bb5760405163dac76ec560e01b815260040160405180910390fd5b60008060008660038111156106d2576106d2610c5d565b60038111156106e3576106e3610c5d565b81526020810191909152604001600020546001600160a01b031690508061071d57604051632aabcc1360e01b815260040160405180910390fd5b60006001600087600381111561073557610735610c5d565b600381111561074657610746610c5d565b815260200190815260200160002090506000858560405160200161078892919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b604051602081830303815290604052905060008760038111156107ad576107ad610c5d565b835460405160f89290921b7fff00000000000000000000000000000000000000000000000000000000000000166020830152602182015260410160405160208183030381529060405280519060200120905061080a8483836109e0565b8354600180820186556000868152602080822090930180546001600160a01b0319166001600160a01b03861690811790915581526002909252604090912080549297508a92909160ff199091169083600381111561086a5761086a610c5d565b021790555060405163189acdbd60e31b81523360048201526001600160a01b0386169063c4d66de890602401600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b50505050505050509392505050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b031916815561040882610a9b565b600082600381111561091f5761091f610c5d565b0361093d5760405163dac76ec560e01b815260040160405180910390fd5b8060008084600381111561095357610953610c5d565b600381111561096457610964610c5d565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905581168260038111156109a2576109a2610c5d565b6040517fe6f4086f57b7e875a8858b8ecc873e8dfcf686d42d08de2a31d38d403c2b07e490600090a35050565b6109d7610b0c565b61037681610b5a565b600060408303516020840351845180602087010180516002830161ffca811115610a125763c8c781396000526004601cfd5b6c5af43d3d93803e603357fd5bf3895289600d8a03527d6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d738160481b176035820160d81b1760218a03528060f01b835287603f8201601f8b036000f596505085610a815763301164256000526004601cfd5b90528552601f19850152603f199093019290925250919050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166102c657604051631afcd79f60e31b815260040160405180910390fd5b610b62610b0c565b6001600160a01b03811661036d57604051631e4fbdf760e01b815260006004820152602401610364565b803560048110610b9b57600080fd5b919050565b6001600160a01b038116811461037657600080fd5b600080600060608486031215610bca57600080fd5b610bd384610b8c565b92506020840135610be381610ba0565b929592945050506040919091013590565b600060208284031215610c0657600080fd5b610c0f82610b8c565b9392505050565b60008060408385031215610c2957600080fd5b610c3283610b8c565b946020939093013593505050565b600060208284031215610c5257600080fd5b8135610c0f81610ba0565b634e487b7160e01b600052602160045260246000fd5b6020810160048310610c9557634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215610cae57600080fd5b610cb783610b8c565b91506020830135610cc781610ba0565b809150509250929050565b60008083601f840112610ce457600080fd5b50813567ffffffffffffffff811115610cfc57600080fd5b6020830191508360208260051b8501011115610d1757600080fd5b9250929050565b600080600080600060608688031215610d3657600080fd5b8535610d4181610ba0565b9450602086013567ffffffffffffffff80821115610d5e57600080fd5b610d6a89838a01610cd2565b90965094506040880135915080821115610d8357600080fd5b50610d9088828901610cd2565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610dd757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220218d3656d34742a938fd1acbeaa3a31bae5275a837dae01fd427f510db8b614964736f6c63430008140033",
    "sourceMap": "617:5141:98:-:0;;;958:53;;;;;;;;;-1:-1:-1;982:22:98;:20;:22::i;:::-;617:5141;;7711:422:23;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:23;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:23;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:23;-1:-1:-1;;;;;8035:33:23;;;;;8087:29;;158:50:120;;;8087:29:23;;146:2:120;131:18;8087:29:23;;;;;;;7981:146;7760:373;7711:422::o;14:200:120:-;617:5141:98;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80639e9dccb611610081578063e30c39781161005b578063e30c3978146101b6578063e6300a03146101be578063f2fde38b146101d157600080fd5b80639e9dccb614610157578063cd23517814610190578063cdffa538146101a357600080fd5b806372bdf244116100b257806372bdf2441461013457806379ba5097146101475780638da5cb5b1461014f57600080fd5b806316bc54b3146100d95780633628896a14610109578063715018a61461012a575b600080fd5b6100ec6100e7366004610bb5565b6101e4565b6040516001600160a01b0390911681526020015b60405180910390f35b61011c610117366004610bf4565b610274565b604051908152602001610100565b6101326102b4565b005b6100ec610142366004610c16565b6102c8565b61013261032c565b6100ec610379565b610183610165366004610c40565b6001600160a01b031660009081526002602052604090205460ff1690565b6040516101009190610c73565b6100ec61019e366004610bf4565b6103ae565b6101326101b1366004610c9b565b6103f6565b6100ec61040c565b6101326101cc366004610d1e565b610435565b6101326101df366004610c40565b6105d1565b600060028460038111156101fa576101fa610c5d565b1461020757610207610656565b610212848484610688565b905081836001600160a01b031685600381111561023157610231610c5d565b6040516001600160a01b03851681527f9f6902c2aefd6fe22828245dde3226eb65e7633ffcdee0e32948a4e541f91dd89060200160405180910390a49392505050565b60006001600083600381111561028c5761028c610c5d565b600381111561029d5761029d610c5d565b815260208101919091526040016000205492915050565b6102bc610656565b6102c660006108d3565b565b6000600160008460038111156102e0576102e0610c5d565b60038111156102f1576102f1610c5d565b8152602001908152602001600020828154811061031057610310610da1565b6000918252602090912001546001600160a01b03169392505050565b338061033661040c565b6001600160a01b03161461036d5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610376816108d3565b50565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60008060008360038111156103c5576103c5610c5d565b60038111156103d6576103d6610c5d565b81526020810191909152604001600020546001600160a01b031692915050565b6103fe610656565b610408828261090b565b5050565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0061039e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156104805750825b905060008267ffffffffffffffff16600114801561049d5750303b155b9050811580156104ab575080155b156104c95760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104fd57845468ff00000000000000001916680100000000000000001785555b6105068a6109cf565b8760005b81811015610578576105688b8b8381811061052757610527610da1565b905060200201602081019061053c9190610bf4565b8a8a8481811061054e5761054e610da1565b90506020020160208101906105639190610c40565b61090b565b61057181610db7565b905061050a565b505083156105c557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6105d9610656565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825561061d610379565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b3361065f610379565b6001600160a01b0316146102c65760405163118cdaa760e01b8152336004820152602401610364565b60008084600381111561069d5761069d610c5d565b036106bb5760405163dac76ec560e01b815260040160405180910390fd5b60008060008660038111156106d2576106d2610c5d565b60038111156106e3576106e3610c5d565b81526020810191909152604001600020546001600160a01b031690508061071d57604051632aabcc1360e01b815260040160405180910390fd5b60006001600087600381111561073557610735610c5d565b600381111561074657610746610c5d565b815260200190815260200160002090506000858560405160200161078892919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b604051602081830303815290604052905060008760038111156107ad576107ad610c5d565b835460405160f89290921b7fff00000000000000000000000000000000000000000000000000000000000000166020830152602182015260410160405160208183030381529060405280519060200120905061080a8483836109e0565b8354600180820186556000868152602080822090930180546001600160a01b0319166001600160a01b03861690811790915581526002909252604090912080549297508a92909160ff199091169083600381111561086a5761086a610c5d565b021790555060405163189acdbd60e31b81523360048201526001600160a01b0386169063c4d66de890602401600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b50505050505050509392505050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b031916815561040882610a9b565b600082600381111561091f5761091f610c5d565b0361093d5760405163dac76ec560e01b815260040160405180910390fd5b8060008084600381111561095357610953610c5d565b600381111561096457610964610c5d565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905581168260038111156109a2576109a2610c5d565b6040517fe6f4086f57b7e875a8858b8ecc873e8dfcf686d42d08de2a31d38d403c2b07e490600090a35050565b6109d7610b0c565b61037681610b5a565b600060408303516020840351845180602087010180516002830161ffca811115610a125763c8c781396000526004601cfd5b6c5af43d3d93803e603357fd5bf3895289600d8a03527d6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d738160481b176035820160d81b1760218a03528060f01b835287603f8201601f8b036000f596505085610a815763301164256000526004601cfd5b90528552601f19850152603f199093019290925250919050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166102c657604051631afcd79f60e31b815260040160405180910390fd5b610b62610b0c565b6001600160a01b03811661036d57604051631e4fbdf760e01b815260006004820152602401610364565b803560048110610b9b57600080fd5b919050565b6001600160a01b038116811461037657600080fd5b600080600060608486031215610bca57600080fd5b610bd384610b8c565b92506020840135610be381610ba0565b929592945050506040919091013590565b600060208284031215610c0657600080fd5b610c0f82610b8c565b9392505050565b60008060408385031215610c2957600080fd5b610c3283610b8c565b946020939093013593505050565b600060208284031215610c5257600080fd5b8135610c0f81610ba0565b634e487b7160e01b600052602160045260246000fd5b6020810160048310610c9557634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215610cae57600080fd5b610cb783610b8c565b91506020830135610cc781610ba0565b809150509250929050565b60008083601f840112610ce457600080fd5b50813567ffffffffffffffff811115610cfc57600080fd5b6020830191508360208260051b8501011115610d1757600080fd5b9250929050565b600080600080600060608688031215610d3657600080fd5b8535610d4181610ba0565b9450602086013567ffffffffffffffff80821115610d5e57600080fd5b610d6a89838a01610cd2565b90965094506040880135915080821115610d8357600080fd5b50610d9088828901610cd2565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610dd757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220218d3656d34742a938fd1acbeaa3a31bae5275a837dae01fd427f510db8b614964736f6c63430008140033",
    "sourceMap": "617:5141:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3316:339;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;972:55:120;;;954:74;;942:2;927:18;3316:339:98;;;;;;;;2150:140;;;;;;:::i;:::-;;:::i;:::-;;;1404:25:120;;;1392:2;1377:18;2150:140:98;1258:177:120;3155:101:22;;;:::i;:::-;;2562:158:98;;;;;;:::i;:::-;;:::i;2774:229:21:-;;;:::i;2441:144:22:-;;;:::i;2898:134:98:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3001:24:98;2970:12;3001:24;;;:14;:24;;;;;;;;;2898:134;;;;;;;;:::i;1787:154::-;;;;;;:::i;:::-;;:::i;3901:184::-;;;;;;:::i;:::-;;:::i;1680:168:21:-;;;:::i;1149:421:98:-;;;;;;:::i;:::-;;:::i;2041:247:21:-;;;;;;:::i;:::-;;:::i;3316:339:98:-;3428:22;3486:26;3470:12;:42;;;;;;;;:::i;:::-;;3466:61;;3514:13;:11;:13::i;:::-;3549:32;3556:12;3570:5;3577:3;3549:6;:32::i;:::-;3538:43;;3634:3;3627:5;-1:-1:-1;;;;;3597:51:98;3613:12;3597:51;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;972:55:120;;954:74;;3597:51:98;;942:2:120;927:18;3597:51:98;;;;;;;3316:339;;;;;:::o;2150:140::-;2226:7;2252:10;:24;2263:12;2252:24;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;2252:24:98;:31;;2150:140;-1:-1:-1;;2150:140:98:o;3155:101:22:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2562:158:98:-;2650:13;2682:10;:24;2693:12;2682:24;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;2707:5;2682:31;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2682:31:98;;2562:158;-1:-1:-1;;;2562:158:98:o;2774:229:21:-;966:10:24;;2869:14:21;:12;:14::i;:::-;-1:-1:-1;;;;;2869:24:21;;2865:96;;2916:34;;-1:-1:-1;;;2916:34:21;;-1:-1:-1;;;;;972:55:120;;2916:34:21;;;954:74:120;927:18;;2916:34:21;;;;;;;;2865:96;2970:26;2989:6;2970:18;:26::i;:::-;2816:187;2774:229::o;2441:144:22:-;2487:7;;1313:22;2533:20;2570:8;-1:-1:-1;;;;;2570:8:22;;2441:144;-1:-1:-1;;2441:144:22:o;1787:154:98:-;1872:13;1904:16;:30;1921:12;1904:30;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;1904:30:98;;-1:-1:-1;;;;;1904:30:98;;1787:154;-1:-1:-1;;1787:154:98:o;3901:184::-;2334:13:22;:11;:13::i;:::-;4022:56:98::1;4049:12;4063:14;4022:26;:56::i;:::-;3901:184:::0;;:::o;1680:168:21:-;1733:7;;1318:27;1784:25;1187:174;1149:421:98;8870:21:23;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:23;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:23;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:23;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:23;;;;;4979:67;1341:28:98::1;1356:12;1341:14;:28::i;:::-;1397:20:::0;1380:14:::1;1434:130;1454:6;1450:1;:10;1434:130;;;1481:72;1508:20;;1529:1;1508:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1533:16;;1550:1;1533:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1481:26;:72::i;:::-;1462:3;::::0;::::1;:::i;:::-;;;1434:130;;;;1331:239;5070:14:23::0;5066:101;;;5100:23;;-1:-1:-1;;5100:23:23;;;5142:14;;-1:-1:-1;5255:50:120;;5142:14:23;;5243:2:120;5228:18;5142:14:23;;;;;;;5066:101;4092:1081;;;;;1149:421:98;;;;;:::o;2041:247:21:-;2334:13:22;:11;:13::i;:::-;1318:27:21;2197:26;;-1:-1:-1;;;;;;2197:26:21::1;-1:-1:-1::0;;;;;2197:26:21;::::1;::::0;;::::1;::::0;;2263:7:::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;2238:43:21::1;;;;;;;;;;;2120:168;2041:247:::0;:::o;2658:162:22:-;966:10:24;2717:7:22;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:22;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:22;;966:10:24;2763:40:22;;;954:74:120;927:18;;2763:40:22;785:249:120;4356:858:98;4443:22;;4481:12;:44;;;;;;;;:::i;:::-;;4477:95;;4534:38;;-1:-1:-1;;;4534:38:98;;;;;;;;;;;4477:95;4583:28;4614:16;:30;4631:12;4614:30;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;4614:30:98;;-1:-1:-1;;;;;4614:30:98;;-1:-1:-1;4614:30:98;4655:80;;4705:30;;-1:-1:-1;;;4705:30:98;;;;;;;;;;;4655:80;4746:33;4782:10;:24;4793:12;4782:24;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;4746:60;;4817:26;4863:5;4870:3;4846:28;;;;;;;;5509:2:120;5505:15;;;;-1:-1:-1;;5501:53:120;5489:66;;5580:2;5571:12;;5564:28;5617:2;5608:12;;5316:310;4846:28:98;;;;;;;;;;;;;4817:57;;4884:12;4932;4926:19;;;;;;;;:::i;:::-;4947:16;;4909:55;;5822:3:120;5800:16;;;;5818:13;5796:36;4909:55:98;;;5784:49:120;5849:11;;;5842:27;5885:12;;4909:55:98;;;;;;;;;;;;4899:66;;;;;;4884:81;;5001:79;5043:14;5060:13;5075:4;5001:33;:79::i;:::-;5092:24;;;;;;;;-1:-1:-1;5092:24:98;;;;;;;;;;;;-1:-1:-1;;;;;;5092:24:98;-1:-1:-1;;;;;5092:24:98;;;;;;;;5126;;:14;:24;;;;;;;:39;;5092:24;;-1:-1:-1;5153:12:98;;5126:24;;-1:-1:-1;;5126:39:98;;;;5153:12;5126:39;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5176:31:98;;-1:-1:-1;;;5176:31:98;;5196:10;5176:31;;;954:74:120;-1:-1:-1;;;;;5176:19:98;;;;;927:18:120;;5176:31:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4467:747;;;;4356:858;;;;;:::o;2472:222:21:-;1318:27;2621:22;;-1:-1:-1;;;;;;2621:22:21;;;2653:34;2678:8;2653:24;:34::i;5414:342:98:-;5545:28;5529:12;:44;;;;;;;;:::i;:::-;;5525:95;;5582:38;;-1:-1:-1;;;5582:38:98;;;;;;;;;;;5525:95;5664:14;5631:16;:30;5648:12;5631:30;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;5631:30:98;:47;;-1:-1:-1;;;;;;5631:47:98;-1:-1:-1;;;;;5631:47:98;;;;;;5694:55;;5720:12;5694:55;;;;;;;;:::i;:::-;;;;;;;;5414:342;;:::o;1847:127:22:-;6931:20:23;:18;:20::i;:::-;1929:38:22::1;1954:12;1929:24;:38::i;1284:9525:1:-:0;1403:16;1578:4;1572;1568:15;1562:22;1629:4;1623;1619:15;1613:22;1672:4;1666:11;1726:10;1719:4;1713;1709:15;1705:32;1771:7;1765:14;1909:1;1897:10;1893:18;2171:6;2158:11;2155:23;2152:237;;;2282:10;2276:4;2269:24;2370:4;2364;2357:18;2152:237;9691:28;9685:4;9678:42;9813:14;9806:4;9800;9796:15;9789:39;10004:62;9990:11;9984:4;9980:22;9977:90;9949:4;9936:11;9932:22;9926:4;9922:33;9898:187;9875:4;9869;9865:15;9841:258;10138:11;10132:4;10128:22;10119:7;10112:39;10265:4;10258;10245:11;10241:22;10234:4;10228;10224:15;10221:1;10213:57;10201:69;;;10340:8;10330:230;;10453:10;10447:4;10440:24;10541:4;10535;10528:18;10330:230;10640:24;;10677;;-1:-1:-1;;10721:15:1;;10714:33;-1:-1:-1;;10767:15:1;;;10760:33;;;;-1:-1:-1;1284:9525:1;;-1:-1:-1;1284:9525:1:o;3774:248:22:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:22;;-1:-1:-1;;;;;3941:19:22;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7084:141:23:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:23;;;;;;;;;;;1980:235:22;6931:20:23;:18;:20::i;:::-;-1:-1:-1;;;;;2076:26:22;::::1;2072:95;;2125:31;::::0;-1:-1:-1;;;2125:31:22;;2153:1:::1;2125:31;::::0;::::1;954:74:120::0;927:18;;2125:31:22::1;785:249:120::0;14:153;92:20;;141:1;131:12;;121:40;;157:1;154;147:12;121:40;14:153;;;:::o;172:162::-;-1:-1:-1;;;;;259:5:120;255:54;248:5;245:65;235:93;;324:1;321;314:12;339:441;450:6;458;466;519:2;507:9;498:7;494:23;490:32;487:52;;;535:1;532;525:12;487:52;558:39;587:9;558:39;:::i;:::-;548:49;;647:2;636:9;632:18;619:32;660:39;693:5;660:39;:::i;:::-;339:441;;718:5;;-1:-1:-1;;;770:2:120;755:18;;;;742:32;;339:441::o;1039:214::-;1116:6;1169:2;1157:9;1148:7;1144:23;1140:32;1137:52;;;1185:1;1182;1175:12;1137:52;1208:39;1237:9;1208:39;:::i;:::-;1198:49;1039:214;-1:-1:-1;;;1039:214:120:o;1440:282::-;1526:6;1534;1587:2;1575:9;1566:7;1562:23;1558:32;1555:52;;;1603:1;1600;1593:12;1555:52;1626:39;1655:9;1626:39;:::i;:::-;1616:49;1712:2;1697:18;;;;1684:32;;-1:-1:-1;;;1440:282:120:o;1958:278::-;2040:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:52;;;2109:1;2106;2099:12;2061:52;2148:9;2135:23;2167:39;2200:5;2167:39;:::i;2241:127::-;2302:10;2297:3;2293:20;2290:1;2283:31;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2373:346;2523:2;2508:18;;2556:1;2545:13;;2535:144;;2601:10;2596:3;2592:20;2589:1;2582:31;2636:4;2633:1;2626:15;2664:4;2661:1;2654:15;2535:144;2688:25;;;2373:346;:::o;2724:380::-;2833:6;2841;2894:2;2882:9;2873:7;2869:23;2865:32;2862:52;;;2910:1;2907;2900:12;2862:52;2933:39;2962:9;2933:39;:::i;:::-;2923:49;;3022:2;3011:9;3007:18;2994:32;3035:39;3068:5;3035:39;:::i;:::-;3093:5;3083:15;;;2724:380;;;;;:::o;3109:377::-;3182:8;3192:6;3246:3;3239:4;3231:6;3227:17;3223:27;3213:55;;3264:1;3261;3254:12;3213:55;-1:-1:-1;3287:20:120;;3330:18;3319:30;;3316:50;;;3362:1;3359;3352:12;3316:50;3399:4;3391:6;3387:17;3375:29;;3459:3;3452:4;3442:6;3439:1;3435:14;3427:6;3423:27;3419:38;3416:47;3413:67;;;3476:1;3473;3466:12;3413:67;3109:377;;;;;:::o;3491:977::-;3663:6;3671;3679;3687;3695;3748:2;3736:9;3727:7;3723:23;3719:32;3716:52;;;3764:1;3761;3754:12;3716:52;3803:9;3790:23;3822:39;3855:5;3822:39;:::i;:::-;3880:5;-1:-1:-1;3936:2:120;3921:18;;3908:32;3959:18;3989:14;;;3986:34;;;4016:1;4013;4006:12;3986:34;4055:80;4127:7;4118:6;4107:9;4103:22;4055:80;:::i;:::-;4154:8;;-1:-1:-1;4029:106:120;-1:-1:-1;4242:2:120;4227:18;;4214:32;;-1:-1:-1;4258:16:120;;;4255:36;;;4287:1;4284;4277:12;4255:36;;4326:82;4400:7;4389:8;4378:9;4374:24;4326:82;:::i;:::-;3491:977;;;;-1:-1:-1;3491:977:120;;-1:-1:-1;4427:8:120;;4300:108;3491:977;-1:-1:-1;;;3491:977:120:o;4733:127::-;4794:10;4789:3;4785:20;4782:1;4775:31;4825:4;4822:1;4815:15;4849:4;4846:1;4839:15;4865:232;4904:3;4925:17;;;4922:140;;4984:10;4979:3;4975:20;4972:1;4965:31;5019:4;5016:1;5009:15;5047:4;5044:1;5037:15;4922:140;-1:-1:-1;5089:1:120;5078:13;;4865:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "createRewarder(uint8,address,uint256)": "16bc54b3",
    "getRewarderAt(uint8,uint256)": "72bdf244",
    "getRewarderCount(uint8)": "3628896a",
    "getRewarderImplementation(uint8)": "cd235178",
    "getRewarderType(address)": "9e9dccb6",
    "initialize(address,uint8[],address[])": "e6300a03",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "setRewarderImplementation(uint8,address)": "cdffa538",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewarderFactory__InvalidRewarderType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewarderFactory__ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IBaseRewarder\",\"name\":\"rewarder\",\"type\":\"address\"}],\"name\":\"RewarderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"contract IBaseRewarder\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"RewarderImplementationSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"createRewarder\",\"outputs\":[{\"internalType\":\"contract IBaseRewarder\",\"name\":\"rewarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRewarderAt\",\"outputs\":[{\"internalType\":\"contract IBaseRewarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"}],\"name\":\"getRewarderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"}],\"name\":\"getRewarderImplementation\",\"outputs\":[{\"internalType\":\"contract IBaseRewarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBaseRewarder\",\"name\":\"rewarder\",\"type\":\"address\"}],\"name\":\"getRewarderType\",\"outputs\":[{\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"enum IRewarderFactory.RewarderType[]\",\"name\":\"initialRewarderTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"contract IBaseRewarder[]\",\"name\":\"initialRewarders\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRewarderFactory.RewarderType\",\"name\":\"rewarderType\",\"type\":\"uint8\"},{\"internalType\":\"contract IBaseRewarder\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"setRewarderImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Rewarder Factory Contract allows users to create veMoe rewarders, and admin to create masterchef rewarders.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"details\":\"Disables the initialize function.\"},\"createRewarder(uint8,address,uint256)\":{\"details\":\"Creates a rewarder. Only the owner can call this function, except for veMoe rewarders.\",\"params\":{\"pid\":\"The pool ID.\",\"rewarderType\":\"The rewarder type.\",\"token\":\"The token to reward.\"},\"returns\":{\"rewarder\":\"The rewarder.\"}},\"getRewarderAt(uint8,uint256)\":{\"details\":\"Returns the rewarder at the given index for the given rewarder type.\",\"params\":{\"index\":\"The index of the rewarder.\",\"rewarderType\":\"The rewarder type.\"},\"returns\":{\"_0\":\"The rewarder at the given index for the given rewarder type.\"}},\"getRewarderCount(uint8)\":{\"details\":\"Returns the number of rewarders for the given rewarder type.\",\"params\":{\"rewarderType\":\"The rewarder type.\"},\"returns\":{\"_0\":\"The number of rewarders for the given rewarder type.\"}},\"getRewarderImplementation(uint8)\":{\"details\":\"Returns the rewarder implementation for the given rewarder type.\",\"params\":{\"rewarderType\":\"The rewarder type.\"},\"returns\":{\"_0\":\"The rewarder implementation for the given rewarder type.\"}},\"getRewarderType(address)\":{\"details\":\"Returns the rewarder type for the given rewarder.\",\"params\":{\"rewarder\":\"The rewarder.\"},\"returns\":{\"_0\":\"The rewarder type for the given rewarder.\"}},\"initialize(address,uint8[],address[])\":{\"details\":\"Initializes the RewarderFactory contract.\",\"params\":{\"initialOwner\":\"The initial owner of the contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRewarderImplementation(uint8,address)\":{\"details\":\"Sets the rewarder implementation for the given rewarder type. Only the owner can call this function.\",\"params\":{\"implementation\":\"The rewarder implementation.\",\"rewarderType\":\"The rewarder type.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"title\":\"Rewarder Factory Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/rewarders/RewarderFactory.sol\":\"RewarderFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@tj-dexv2/=lib/dexv2/\",\":dexv2/=lib/dexv2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/dexv2/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/dexv2/src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x128845623787e6d43d1827defe114499d8c917fd3fea8f1a783ae42174076ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f653b932ebff34f5c39f8536e80da6a4f5778285210c2602a8f9766faf3d7fc\",\"dweb:/ipfs/Qmc8hSHLbyx7dvwpd9aHCRp9GFqYH3kWqyXzRC7kFoDrAj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/interfaces/IBaseRewarder.sol\":{\"keccak256\":\"0xb8d8efb474830ac594a62394056a8c40b545f03d9000f7392a179e6870df80f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8666a7734203618d1ad1a366976467e37e0edbd2c4adca133a8cceb6cf51241\",\"dweb:/ipfs/QmaDrrsGza9L5zviqt86dbxecg7zRNxSZ69CzjGBQ2Xi1c\"]},\"src/interfaces/IRewarderFactory.sol\":{\"keccak256\":\"0x1cd42a7e3752e362864c3a8ee3287c9e4103eae1e6f6d2882c72d09df7dc6744\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bb60082a3df252f949d62eed933e8057e05a659969b79d539e4320d77593da6\",\"dweb:/ipfs/QmcXypp4y5VJk5LzPHz29dvuHz42YzDYoyRtmPszJsSF7v\"]},\"src/rewarders/RewarderFactory.sol\":{\"keccak256\":\"0xd8154654414fdecf372c5a23879c1ef3920d66b23470bc120ce86f7df3a4b8e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e673d7222744e8e30769dcc28754c774a9f85251a7afc4bda89b315afe43d1b4\",\"dweb:/ipfs/QmfDrWuFrGLc58Hja856Kvss38uS4hAQmEvYBaoGrzEd42\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RewarderFactory__InvalidRewarderType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RewarderFactory__ZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "contract IBaseRewarder",
              "name": "rewarder",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewarderCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "contract IBaseRewarder",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewarderImplementationSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRewarder",
          "outputs": [
            {
              "internalType": "contract IBaseRewarder",
              "name": "rewarder",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewarderAt",
          "outputs": [
            {
              "internalType": "contract IBaseRewarder",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewarderCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewarderImplementation",
          "outputs": [
            {
              "internalType": "contract IBaseRewarder",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IBaseRewarder",
              "name": "rewarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewarderType",
          "outputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "enum IRewarderFactory.RewarderType[]",
              "name": "initialRewarderTypes",
              "type": "uint8[]"
            },
            {
              "internalType": "contract IBaseRewarder[]",
              "name": "initialRewarders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRewarderFactory.RewarderType",
              "name": "rewarderType",
              "type": "uint8"
            },
            {
              "internalType": "contract IBaseRewarder",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewarderImplementation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "constructor": {
            "details": "Disables the initialize function."
          },
          "createRewarder(uint8,address,uint256)": {
            "details": "Creates a rewarder. Only the owner can call this function, except for veMoe rewarders.",
            "params": {
              "pid": "The pool ID.",
              "rewarderType": "The rewarder type.",
              "token": "The token to reward."
            },
            "returns": {
              "rewarder": "The rewarder."
            }
          },
          "getRewarderAt(uint8,uint256)": {
            "details": "Returns the rewarder at the given index for the given rewarder type.",
            "params": {
              "index": "The index of the rewarder.",
              "rewarderType": "The rewarder type."
            },
            "returns": {
              "_0": "The rewarder at the given index for the given rewarder type."
            }
          },
          "getRewarderCount(uint8)": {
            "details": "Returns the number of rewarders for the given rewarder type.",
            "params": {
              "rewarderType": "The rewarder type."
            },
            "returns": {
              "_0": "The number of rewarders for the given rewarder type."
            }
          },
          "getRewarderImplementation(uint8)": {
            "details": "Returns the rewarder implementation for the given rewarder type.",
            "params": {
              "rewarderType": "The rewarder type."
            },
            "returns": {
              "_0": "The rewarder implementation for the given rewarder type."
            }
          },
          "getRewarderType(address)": {
            "details": "Returns the rewarder type for the given rewarder.",
            "params": {
              "rewarder": "The rewarder."
            },
            "returns": {
              "_0": "The rewarder type for the given rewarder."
            }
          },
          "initialize(address,uint8[],address[])": {
            "details": "Initializes the RewarderFactory contract.",
            "params": {
              "initialOwner": "The initial owner of the contract."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setRewarderImplementation(uint8,address)": {
            "details": "Sets the rewarder implementation for the given rewarder type. Only the owner can call this function.",
            "params": {
              "implementation": "The rewarder implementation.",
              "rewarderType": "The rewarder type."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@tj-dexv2/=lib/dexv2/",
        "dexv2/=lib/dexv2/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/dexv2/lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 600
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/rewarders/RewarderFactory.sol": "RewarderFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/dexv2/src/libraries/ImmutableClone.sol": {
        "keccak256": "0x128845623787e6d43d1827defe114499d8c917fd3fea8f1a783ae42174076ddc",
        "urls": [
          "bzz-raw://1f653b932ebff34f5c39f8536e80da6a4f5778285210c2602a8f9766faf3d7fc",
          "dweb:/ipfs/Qmc8hSHLbyx7dvwpd9aHCRp9GFqYH3kWqyXzRC7kFoDrAj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f",
        "urls": [
          "bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7",
          "dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c",
        "urls": [
          "bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b",
          "dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBaseRewarder.sol": {
        "keccak256": "0xb8d8efb474830ac594a62394056a8c40b545f03d9000f7392a179e6870df80f1",
        "urls": [
          "bzz-raw://c8666a7734203618d1ad1a366976467e37e0edbd2c4adca133a8cceb6cf51241",
          "dweb:/ipfs/QmaDrrsGza9L5zviqt86dbxecg7zRNxSZ69CzjGBQ2Xi1c"
        ],
        "license": "MIT"
      },
      "src/interfaces/IRewarderFactory.sol": {
        "keccak256": "0x1cd42a7e3752e362864c3a8ee3287c9e4103eae1e6f6d2882c72d09df7dc6744",
        "urls": [
          "bzz-raw://8bb60082a3df252f949d62eed933e8057e05a659969b79d539e4320d77593da6",
          "dweb:/ipfs/QmcXypp4y5VJk5LzPHz29dvuHz42YzDYoyRtmPszJsSF7v"
        ],
        "license": "MIT"
      },
      "src/rewarders/RewarderFactory.sol": {
        "keccak256": "0xd8154654414fdecf372c5a23879c1ef3920d66b23470bc120ce86f7df3a4b8e0",
        "urls": [
          "bzz-raw://e673d7222744e8e30769dcc28754c774a9f85251a7afc4bda89b315afe43d1b4",
          "dweb:/ipfs/QmfDrWuFrGLc58Hja856Kvss38uS4hAQmEvYBaoGrzEd42"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/rewarders/RewarderFactory.sol",
    "id": 66802,
    "exportedSymbols": {
      "IBaseRewarder": [
        63812
      ],
      "IERC20": [
        46102
      ],
      "IRewarderFactory": [
        64372
      ],
      "ImmutableClone": [
        199
      ],
      "Ownable2StepUpgradeable": [
        43724
      ],
      "RewarderFactory": [
        66801
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5727:98",
    "nodes": [
      {
        "id": 66453,
        "nodeType": "PragmaDirective",
        "src": "32:24:98",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 66455,
        "nodeType": "ImportDirective",
        "src": "58:111:98",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66802,
        "sourceUnit": 43725,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66454,
              "name": "Ownable2StepUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43724,
              "src": "66:23:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66457,
        "nodeType": "ImportDirective",
        "src": "170:74:98",
        "nodes": [],
        "absolutePath": "lib/dexv2/src/libraries/ImmutableClone.sol",
        "file": "@tj-dexv2/src/libraries/ImmutableClone.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66802,
        "sourceUnit": 200,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66456,
              "name": "ImmutableClone",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 199,
              "src": "178:14:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66459,
        "nodeType": "ImportDirective",
        "src": "245:70:98",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66802,
        "sourceUnit": 46103,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66458,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46102,
              "src": "253:6:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66461,
        "nodeType": "ImportDirective",
        "src": "317:62:98",
        "nodes": [],
        "absolutePath": "src/interfaces/IBaseRewarder.sol",
        "file": "../interfaces/IBaseRewarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66802,
        "sourceUnit": 63813,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66460,
              "name": "IBaseRewarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63812,
              "src": "325:13:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66463,
        "nodeType": "ImportDirective",
        "src": "380:68:98",
        "nodes": [],
        "absolutePath": "src/interfaces/IRewarderFactory.sol",
        "file": "../interfaces/IRewarderFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66802,
        "sourceUnit": 64373,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66462,
              "name": "IRewarderFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64372,
              "src": "388:16:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66801,
        "nodeType": "ContractDefinition",
        "src": "617:5141:98",
        "nodes": [
          {
            "id": 66474,
            "nodeType": "VariableDeclaration",
            "src": "693:63:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_implementations",
            "nameLocation": "740:16:98",
            "scope": 66801,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$",
              "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder)"
            },
            "typeName": {
              "id": 66473,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 66470,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66469,
                  "name": "RewarderType",
                  "nameLocations": [
                    "701:12:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64290,
                  "src": "701:12:98"
                },
                "referencedDeclaration": 64290,
                "src": "701:12:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RewarderType_$64290",
                  "typeString": "enum IRewarderFactory.RewarderType"
                }
              },
              "nodeType": "Mapping",
              "src": "693:38:98",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$",
                "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 66472,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66471,
                  "name": "IBaseRewarder",
                  "nameLocations": [
                    "717:13:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63812,
                  "src": "717:13:98"
                },
                "referencedDeclaration": 63812,
                "src": "717:13:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                  "typeString": "contract IBaseRewarder"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 66481,
            "nodeType": "VariableDeclaration",
            "src": "763:59:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewarders",
            "nameLocation": "812:10:98",
            "scope": 66801,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_$",
              "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder[])"
            },
            "typeName": {
              "id": 66480,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 66476,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66475,
                  "name": "RewarderType",
                  "nameLocations": [
                    "771:12:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64290,
                  "src": "771:12:98"
                },
                "referencedDeclaration": 64290,
                "src": "771:12:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RewarderType_$64290",
                  "typeString": "enum IRewarderFactory.RewarderType"
                }
              },
              "nodeType": "Mapping",
              "src": "763:40:98",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_$",
                "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 66478,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 66477,
                    "name": "IBaseRewarder",
                    "nameLocations": [
                      "787:13:98"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63812,
                    "src": "787:13:98"
                  },
                  "referencedDeclaration": 63812,
                  "src": "787:13:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  }
                },
                "id": 66479,
                "nodeType": "ArrayTypeName",
                "src": "787:15:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr",
                  "typeString": "contract IBaseRewarder[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 66487,
            "nodeType": "VariableDeclaration",
            "src": "828:61:98",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewarderTypes",
            "nameLocation": "875:14:98",
            "scope": 66801,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IBaseRewarder_$63812_$_t_enum$_RewarderType_$64290_$",
              "typeString": "mapping(contract IBaseRewarder => enum IRewarderFactory.RewarderType)"
            },
            "typeName": {
              "id": 66486,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 66483,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66482,
                  "name": "IBaseRewarder",
                  "nameLocations": [
                    "836:13:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63812,
                  "src": "836:13:98"
                },
                "referencedDeclaration": 63812,
                "src": "836:13:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                  "typeString": "contract IBaseRewarder"
                }
              },
              "nodeType": "Mapping",
              "src": "828:38:98",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IBaseRewarder_$63812_$_t_enum$_RewarderType_$64290_$",
                "typeString": "mapping(contract IBaseRewarder => enum IRewarderFactory.RewarderType)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 66485,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66484,
                  "name": "RewarderType",
                  "nameLocations": [
                    "853:12:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64290,
                  "src": "853:12:98"
                },
                "referencedDeclaration": 64290,
                "src": "853:12:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RewarderType_$64290",
                  "typeString": "enum IRewarderFactory.RewarderType"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 66495,
            "nodeType": "FunctionDefinition",
            "src": "958:53:98",
            "nodes": [],
            "body": {
              "id": 66494,
              "nodeType": "Block",
              "src": "972:39:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66491,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44141,
                      "src": "982:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:22:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66493,
                  "nodeType": "ExpressionStatement",
                  "src": "982:22:98"
                }
              ]
            },
            "documentation": {
              "id": 66488,
              "nodeType": "StructuredDocumentation",
              "src": "896:57:98",
              "text": " @dev Disables the initialize function."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:2:98"
            },
            "returnParameters": {
              "id": 66490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:98"
            },
            "scope": 66801,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66541,
            "nodeType": "FunctionDefinition",
            "src": "1149:421:98",
            "nodes": [],
            "body": {
              "id": 66540,
              "nodeType": "Block",
              "src": "1331:239:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66512,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66498,
                        "src": "1356:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66511,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43779,
                      "src": "1341:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:28:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66514,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:28:98"
                },
                {
                  "assignments": [
                    66516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66516,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "1388:6:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 66540,
                      "src": "1380:14:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1380:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66519,
                  "initialValue": {
                    "expression": {
                      "id": 66517,
                      "name": "initialRewarderTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66502,
                      "src": "1397:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_RewarderType_$64290_$dyn_calldata_ptr",
                        "typeString": "enum IRewarderFactory.RewarderType[] calldata"
                      }
                    },
                    "id": 66518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1418:6:98",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1397:27:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1380:44:98"
                },
                {
                  "body": {
                    "id": 66538,
                    "nodeType": "Block",
                    "src": "1467:97:98",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 66530,
                                "name": "initialRewarderTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66502,
                                "src": "1508:20:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_enum$_RewarderType_$64290_$dyn_calldata_ptr",
                                  "typeString": "enum IRewarderFactory.RewarderType[] calldata"
                                }
                              },
                              "id": 66532,
                              "indexExpression": {
                                "id": 66531,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66521,
                                "src": "1529:1:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1508:23:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RewarderType_$64290",
                                "typeString": "enum IRewarderFactory.RewarderType"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 66533,
                                "name": "initialRewarders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66506,
                                "src": "1533:16:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_calldata_ptr",
                                  "typeString": "contract IBaseRewarder[] calldata"
                                }
                              },
                              "id": 66535,
                              "indexExpression": {
                                "id": 66534,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66521,
                                "src": "1550:1:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1533:19:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                                "typeString": "contract IBaseRewarder"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RewarderType_$64290",
                                "typeString": "enum IRewarderFactory.RewarderType"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                                "typeString": "contract IBaseRewarder"
                              }
                            ],
                            "id": 66529,
                            "name": "_setRewarderImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66800,
                            "src": "1481:26:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$returns$__$",
                              "typeString": "function (enum IRewarderFactory.RewarderType,contract IBaseRewarder)"
                            }
                          },
                          "id": 66536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:72:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66537,
                        "nodeType": "ExpressionStatement",
                        "src": "1481:72:98"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66523,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66521,
                      "src": "1450:1:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 66524,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66516,
                      "src": "1454:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1450:10:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66539,
                  "initializationExpression": {
                    "assignments": [
                      66521
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 66521,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1447:1:98",
                        "nodeType": "VariableDeclaration",
                        "scope": 66539,
                        "src": "1439:9:98",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 66520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1439:7:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 66522,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1439:9:98"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 66527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1462:3:98",
                      "subExpression": {
                        "id": 66526,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66521,
                        "src": "1464:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66528,
                    "nodeType": "ExpressionStatement",
                    "src": "1462:3:98"
                  },
                  "nodeType": "ForStatement",
                  "src": "1434:130:98"
                }
              ]
            },
            "documentation": {
              "id": 66496,
              "nodeType": "StructuredDocumentation",
              "src": "1017:127:98",
              "text": " @dev Initializes the RewarderFactory contract.\n @param initialOwner The initial owner of the contract."
            },
            "functionSelector": "e6300a03",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66509,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66508,
                  "name": "initializer",
                  "nameLocations": [
                    "1319:11:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44027,
                  "src": "1319:11:98"
                },
                "nodeType": "ModifierInvocation",
                "src": "1319:11:98"
              }
            ],
            "name": "initialize",
            "nameLocation": "1158:10:98",
            "parameters": {
              "id": 66507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66498,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1186:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66541,
                  "src": "1178:20:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66502,
                  "mutability": "mutable",
                  "name": "initialRewarderTypes",
                  "nameLocation": "1232:20:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66541,
                  "src": "1208:44:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_RewarderType_$64290_$dyn_calldata_ptr",
                    "typeString": "enum IRewarderFactory.RewarderType[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66500,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 66499,
                        "name": "RewarderType",
                        "nameLocations": [
                          "1208:12:98"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 64290,
                        "src": "1208:12:98"
                      },
                      "referencedDeclaration": 64290,
                      "src": "1208:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "id": 66501,
                    "nodeType": "ArrayTypeName",
                    "src": "1208:14:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_RewarderType_$64290_$dyn_storage_ptr",
                      "typeString": "enum IRewarderFactory.RewarderType[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66506,
                  "mutability": "mutable",
                  "name": "initialRewarders",
                  "nameLocation": "1287:16:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66541,
                  "src": "1262:41:98",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_calldata_ptr",
                    "typeString": "contract IBaseRewarder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66504,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 66503,
                        "name": "IBaseRewarder",
                        "nameLocations": [
                          "1262:13:98"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 63812,
                        "src": "1262:13:98"
                      },
                      "referencedDeclaration": 63812,
                      "src": "1262:13:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "id": 66505,
                    "nodeType": "ArrayTypeName",
                    "src": "1262:15:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr",
                      "typeString": "contract IBaseRewarder[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1168:141:98"
            },
            "returnParameters": {
              "id": 66510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:0:98"
            },
            "scope": 66801,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66556,
            "nodeType": "FunctionDefinition",
            "src": "1787:154:98",
            "nodes": [],
            "body": {
              "id": 66555,
              "nodeType": "Block",
              "src": "1887:54:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 66551,
                      "name": "_implementations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66474,
                      "src": "1904:16:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$",
                        "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder)"
                      }
                    },
                    "id": 66553,
                    "indexExpression": {
                      "id": 66552,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66545,
                      "src": "1921:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1904:30:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "functionReturnParameters": 66550,
                  "id": 66554,
                  "nodeType": "Return",
                  "src": "1897:37:98"
                }
              ]
            },
            "baseFunctions": [
              64320
            ],
            "documentation": {
              "id": 66542,
              "nodeType": "StructuredDocumentation",
              "src": "1576:206:98",
              "text": " @dev Returns the rewarder implementation for the given rewarder type.\n @param rewarderType The rewarder type.\n @return The rewarder implementation for the given rewarder type."
            },
            "functionSelector": "cd235178",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewarderImplementation",
            "nameLocation": "1796:25:98",
            "parameters": {
              "id": 66546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66545,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "1835:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66556,
                  "src": "1822:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66544,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66543,
                      "name": "RewarderType",
                      "nameLocations": [
                        "1822:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "1822:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "1822:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:27:98"
            },
            "returnParameters": {
              "id": 66550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66556,
                  "src": "1872:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66548,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66547,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "1872:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "1872:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "1872:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:15:98"
            },
            "scope": 66801,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66571,
            "nodeType": "FunctionDefinition",
            "src": "2150:140:98",
            "nodes": [],
            "body": {
              "id": 66570,
              "nodeType": "Block",
              "src": "2235:55:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 66565,
                        "name": "_rewarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66481,
                        "src": "2252:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_$",
                          "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder[] storage ref)"
                        }
                      },
                      "id": 66567,
                      "indexExpression": {
                        "id": 66566,
                        "name": "rewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66560,
                        "src": "2263:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2252:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage",
                        "typeString": "contract IBaseRewarder[] storage ref"
                      }
                    },
                    "id": 66568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2277:6:98",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2252:31:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66564,
                  "id": 66569,
                  "nodeType": "Return",
                  "src": "2245:38:98"
                }
              ]
            },
            "baseFunctions": [
              64328
            ],
            "documentation": {
              "id": 66557,
              "nodeType": "StructuredDocumentation",
              "src": "1947:198:98",
              "text": " @dev Returns the number of rewarders for the given rewarder type.\n @param rewarderType The rewarder type.\n @return The number of rewarders for the given rewarder type."
            },
            "functionSelector": "3628896a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewarderCount",
            "nameLocation": "2159:16:98",
            "parameters": {
              "id": 66561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66560,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "2189:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66571,
                  "src": "2176:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66558,
                      "name": "RewarderType",
                      "nameLocations": [
                        "2176:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "2176:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "2176:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2175:27:98"
            },
            "returnParameters": {
              "id": 66564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66571,
                  "src": "2226:7:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2225:9:98"
            },
            "scope": 66801,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66590,
            "nodeType": "FunctionDefinition",
            "src": "2562:158:98",
            "nodes": [],
            "body": {
              "id": 66589,
              "nodeType": "Block",
              "src": "2665:55:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 66583,
                        "name": "_rewarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66481,
                        "src": "2682:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_$",
                          "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder[] storage ref)"
                        }
                      },
                      "id": 66585,
                      "indexExpression": {
                        "id": 66584,
                        "name": "rewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66575,
                        "src": "2693:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2682:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage",
                        "typeString": "contract IBaseRewarder[] storage ref"
                      }
                    },
                    "id": 66587,
                    "indexExpression": {
                      "id": 66586,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66577,
                      "src": "2707:5:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2682:31:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "functionReturnParameters": 66582,
                  "id": 66588,
                  "nodeType": "Return",
                  "src": "2675:38:98"
                }
              ]
            },
            "baseFunctions": [
              64339
            ],
            "documentation": {
              "id": 66572,
              "nodeType": "StructuredDocumentation",
              "src": "2296:261:98",
              "text": " @dev Returns the rewarder at the given index for the given rewarder type.\n @param rewarderType The rewarder type.\n @param index The index of the rewarder.\n @return The rewarder at the given index for the given rewarder type."
            },
            "functionSelector": "72bdf244",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewarderAt",
            "nameLocation": "2571:13:98",
            "parameters": {
              "id": 66578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66575,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "2598:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66590,
                  "src": "2585:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66573,
                      "name": "RewarderType",
                      "nameLocations": [
                        "2585:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "2585:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "2585:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66577,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2620:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66590,
                  "src": "2612:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2584:42:98"
            },
            "returnParameters": {
              "id": 66582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66590,
                  "src": "2650:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66579,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "2650:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "2650:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "2650:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2649:15:98"
            },
            "scope": 66801,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66605,
            "nodeType": "FunctionDefinition",
            "src": "2898:134:98",
            "nodes": [],
            "body": {
              "id": 66604,
              "nodeType": "Block",
              "src": "2984:48:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 66600,
                      "name": "_rewarderTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66487,
                      "src": "3001:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IBaseRewarder_$63812_$_t_enum$_RewarderType_$64290_$",
                        "typeString": "mapping(contract IBaseRewarder => enum IRewarderFactory.RewarderType)"
                      }
                    },
                    "id": 66602,
                    "indexExpression": {
                      "id": 66601,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66594,
                      "src": "3016:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3001:24:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "functionReturnParameters": 66599,
                  "id": 66603,
                  "nodeType": "Return",
                  "src": "2994:31:98"
                }
              ]
            },
            "baseFunctions": [
              64348
            ],
            "documentation": {
              "id": 66591,
              "nodeType": "StructuredDocumentation",
              "src": "2726:167:98",
              "text": " @dev Returns the rewarder type for the given rewarder.\n @param rewarder The rewarder.\n @return The rewarder type for the given rewarder."
            },
            "functionSelector": "9e9dccb6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewarderType",
            "nameLocation": "2907:15:98",
            "parameters": {
              "id": 66595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66594,
                  "mutability": "mutable",
                  "name": "rewarder",
                  "nameLocation": "2937:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66605,
                  "src": "2923:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66593,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66592,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "2923:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "2923:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "2923:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2922:24:98"
            },
            "returnParameters": {
              "id": 66599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66605,
                  "src": "2970:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66597,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66596,
                      "name": "RewarderType",
                      "nameLocations": [
                        "2970:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "2970:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "2970:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2969:14:98"
            },
            "scope": 66801,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66644,
            "nodeType": "FunctionDefinition",
            "src": "3316:339:98",
            "nodes": [],
            "body": {
              "id": 66643,
              "nodeType": "Block",
              "src": "3456:199:98",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    },
                    "id": 66623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66620,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66609,
                      "src": "3470:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 66621,
                        "name": "RewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64290,
                        "src": "3486:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RewarderType_$64290_$",
                          "typeString": "type(enum IRewarderFactory.RewarderType)"
                        }
                      },
                      "id": 66622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3499:13:98",
                      "memberName": "VeMoeRewarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64288,
                      "src": "3486:26:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "src": "3470:42:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66627,
                  "nodeType": "IfStatement",
                  "src": "3466:61:98",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66624,
                        "name": "_checkOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43847,
                        "src": "3514:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$__$",
                          "typeString": "function () view"
                        }
                      },
                      "id": 66625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3514:13:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66626,
                    "nodeType": "ExpressionStatement",
                    "src": "3514:13:98"
                  }
                },
                {
                  "expression": {
                    "id": 66634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66628,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66618,
                      "src": "3538:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66630,
                          "name": "rewarderType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66609,
                          "src": "3556:12:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RewarderType_$64290",
                            "typeString": "enum IRewarderFactory.RewarderType"
                          }
                        },
                        {
                          "id": 66631,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66612,
                          "src": "3570:5:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$46102",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 66632,
                          "name": "pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66614,
                          "src": "3577:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_RewarderType_$64290",
                            "typeString": "enum IRewarderFactory.RewarderType"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$46102",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 66629,
                        "name": "_clone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66770,
                        "src": "3549:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_RewarderType_$64290_$_t_contract$_IERC20_$46102_$_t_uint256_$returns$_t_contract$_IBaseRewarder_$63812_$",
                          "typeString": "function (enum IRewarderFactory.RewarderType,contract IERC20,uint256) returns (contract IBaseRewarder)"
                        }
                      },
                      "id": 66633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3549:32:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "src": "3538:43:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "id": 66635,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:43:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66637,
                        "name": "rewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66609,
                        "src": "3613:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        }
                      },
                      {
                        "id": 66638,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66612,
                        "src": "3627:5:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46102",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 66639,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66614,
                        "src": "3634:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 66640,
                        "name": "rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66618,
                        "src": "3639:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46102",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      ],
                      "id": 66636,
                      "name": "RewarderCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64303,
                      "src": "3597:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_RewarderType_$64290_$_t_contract$_IERC20_$46102_$_t_uint256_$_t_contract$_IBaseRewarder_$63812_$returns$__$",
                        "typeString": "function (enum IRewarderFactory.RewarderType,contract IERC20,uint256,contract IBaseRewarder)"
                      }
                    },
                    "id": 66641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3597:51:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66642,
                  "nodeType": "EmitStatement",
                  "src": "3592:56:98"
                }
              ]
            },
            "baseFunctions": [
              64371
            ],
            "documentation": {
              "id": 66606,
              "nodeType": "StructuredDocumentation",
              "src": "3038:273:98",
              "text": " @dev Creates a rewarder.\n Only the owner can call this function, except for veMoe rewarders.\n @param rewarderType The rewarder type.\n @param token The token to reward.\n @param pid The pool ID.\n @return rewarder The rewarder."
            },
            "functionSelector": "16bc54b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRewarder",
            "nameLocation": "3325:14:98",
            "parameters": {
              "id": 66615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66609,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "3353:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66644,
                  "src": "3340:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66608,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66607,
                      "name": "RewarderType",
                      "nameLocations": [
                        "3340:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "3340:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "3340:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66612,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3374:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66644,
                  "src": "3367:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$46102",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 66611,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66610,
                      "name": "IERC20",
                      "nameLocations": [
                        "3367:6:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46102,
                      "src": "3367:6:98"
                    },
                    "referencedDeclaration": 46102,
                    "src": "3367:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$46102",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66614,
                  "mutability": "mutable",
                  "name": "pid",
                  "nameLocation": "3389:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66644,
                  "src": "3381:11:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3339:54:98"
            },
            "returnParameters": {
              "id": 66619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66618,
                  "mutability": "mutable",
                  "name": "rewarder",
                  "nameLocation": "3442:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66644,
                  "src": "3428:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66617,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66616,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "3428:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "3428:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "3428:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3427:24:98"
            },
            "scope": 66801,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66662,
            "nodeType": "FunctionDefinition",
            "src": "3901:184:98",
            "nodes": [],
            "body": {
              "id": 66661,
              "nodeType": "Block",
              "src": "4012:73:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66657,
                        "name": "rewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66648,
                        "src": "4049:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        }
                      },
                      {
                        "id": 66658,
                        "name": "implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66651,
                        "src": "4063:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        },
                        {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      ],
                      "id": 66656,
                      "name": "_setRewarderImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66800,
                      "src": "4022:26:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$returns$__$",
                        "typeString": "function (enum IRewarderFactory.RewarderType,contract IBaseRewarder)"
                      }
                    },
                    "id": 66659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:56:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66660,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:56:98"
                }
              ]
            },
            "baseFunctions": [
              64357
            ],
            "documentation": {
              "id": 66645,
              "nodeType": "StructuredDocumentation",
              "src": "3661:235:98",
              "text": " @dev Sets the rewarder implementation for the given rewarder type.\n Only the owner can call this function.\n @param rewarderType The rewarder type.\n @param implementation The rewarder implementation."
            },
            "functionSelector": "cdffa538",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66654,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66653,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4002:9:98"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43814,
                  "src": "4002:9:98"
                },
                "nodeType": "ModifierInvocation",
                "src": "4002:9:98"
              }
            ],
            "name": "setRewarderImplementation",
            "nameLocation": "3910:25:98",
            "parameters": {
              "id": 66652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66648,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "3949:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66662,
                  "src": "3936:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66646,
                      "name": "RewarderType",
                      "nameLocations": [
                        "3936:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "3936:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "3936:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66651,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "3977:14:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66662,
                  "src": "3963:28:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66650,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66649,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "3963:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "3963:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "3963:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3935:57:98"
            },
            "returnParameters": {
              "id": 66655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4012:0:98"
            },
            "scope": 66801,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66770,
            "nodeType": "FunctionDefinition",
            "src": "4356:858:98",
            "nodes": [],
            "body": {
              "id": 66769,
              "nodeType": "Block",
              "src": "4467:747:98",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    },
                    "id": 66680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66677,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66666,
                      "src": "4481:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 66678,
                        "name": "RewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64290,
                        "src": "4497:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RewarderType_$64290_$",
                          "typeString": "type(enum IRewarderFactory.RewarderType)"
                        }
                      },
                      "id": 66679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4510:15:98",
                      "memberName": "InvalidRewarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64286,
                      "src": "4497:28:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "src": "4481:44:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66684,
                  "nodeType": "IfStatement",
                  "src": "4477:95:98",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66681,
                        "name": "RewarderFactory__InvalidRewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64285,
                        "src": "4534:36:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4534:38:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66683,
                    "nodeType": "RevertStatement",
                    "src": "4527:45:98"
                  }
                },
                {
                  "assignments": [
                    66687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66687,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nameLocation": "4597:14:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 66769,
                      "src": "4583:28:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      },
                      "typeName": {
                        "id": 66686,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66685,
                          "name": "IBaseRewarder",
                          "nameLocations": [
                            "4583:13:98"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63812,
                          "src": "4583:13:98"
                        },
                        "referencedDeclaration": 63812,
                        "src": "4583:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66691,
                  "initialValue": {
                    "baseExpression": {
                      "id": 66688,
                      "name": "_implementations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66474,
                      "src": "4614:16:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$",
                        "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder)"
                      }
                    },
                    "id": 66690,
                    "indexExpression": {
                      "id": 66689,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66666,
                      "src": "4631:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4614:30:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4583:61:98"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 66694,
                          "name": "implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66687,
                          "src": "4667:14:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                            "typeString": "contract IBaseRewarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                            "typeString": "contract IBaseRewarder"
                          }
                        ],
                        "id": 66693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4659:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 66692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4659:7:98",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4659:23:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 66698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4694:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 66697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4686:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 66696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4686:7:98",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4686:10:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4659:37:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66704,
                  "nodeType": "IfStatement",
                  "src": "4655:80:98",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66701,
                        "name": "RewarderFactory__ZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64283,
                        "src": "4705:28:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4705:30:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66703,
                    "nodeType": "RevertStatement",
                    "src": "4698:37:98"
                  }
                },
                {
                  "assignments": [
                    66709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66709,
                      "mutability": "mutable",
                      "name": "rewarders",
                      "nameLocation": "4770:9:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 66769,
                      "src": "4746:33:98",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr",
                        "typeString": "contract IBaseRewarder[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 66707,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 66706,
                            "name": "IBaseRewarder",
                            "nameLocations": [
                              "4746:13:98"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 63812,
                            "src": "4746:13:98"
                          },
                          "referencedDeclaration": 63812,
                          "src": "4746:13:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                            "typeString": "contract IBaseRewarder"
                          }
                        },
                        "id": 66708,
                        "nodeType": "ArrayTypeName",
                        "src": "4746:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr",
                          "typeString": "contract IBaseRewarder[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66713,
                  "initialValue": {
                    "baseExpression": {
                      "id": 66710,
                      "name": "_rewarders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66481,
                      "src": "4782:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_$",
                        "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder[] storage ref)"
                      }
                    },
                    "id": 66712,
                    "indexExpression": {
                      "id": 66711,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66666,
                      "src": "4793:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4782:24:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage",
                      "typeString": "contract IBaseRewarder[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4746:60:98"
                },
                {
                  "assignments": [
                    66715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66715,
                      "mutability": "mutable",
                      "name": "immutableData",
                      "nameLocation": "4830:13:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 66769,
                      "src": "4817:26:98",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 66714,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4817:5:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66721,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66718,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66669,
                        "src": "4863:5:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$46102",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 66719,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66671,
                        "src": "4870:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$46102",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 66716,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4846:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4850:12:98",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4846:16:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 66720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:28:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4817:57:98"
                },
                {
                  "assignments": [
                    66723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66723,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "4892:4:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 66769,
                      "src": "4884:12:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 66722,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4884:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66735,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 66729,
                                "name": "rewarderType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66666,
                                "src": "4932:12:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RewarderType_$64290",
                                  "typeString": "enum IRewarderFactory.RewarderType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_RewarderType_$64290",
                                  "typeString": "enum IRewarderFactory.RewarderType"
                                }
                              ],
                              "id": 66728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4926:5:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 66727,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "4926:5:98",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4926:19:98",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "expression": {
                              "id": 66731,
                              "name": "rewarders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66709,
                              "src": "4947:9:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr",
                                "typeString": "contract IBaseRewarder[] storage pointer"
                              }
                            },
                            "id": 66732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4957:6:98",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4947:16:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 66725,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4909:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 66726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4913:12:98",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4909:16:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 66733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4909:55:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 66724,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4899:9:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 66734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:66:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4884:81:98"
                },
                {
                  "expression": {
                    "id": 66748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66736,
                      "name": "rewarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66675,
                      "src": "4976:8:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66742,
                                  "name": "implementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66687,
                                  "src": "5043:14:98",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                                    "typeString": "contract IBaseRewarder"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                                    "typeString": "contract IBaseRewarder"
                                  }
                                ],
                                "id": 66741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5035:7:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66740,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5035:7:98",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5035:23:98",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 66744,
                              "name": "immutableData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66715,
                              "src": "5060:13:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 66745,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66723,
                              "src": "5075:4:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 66738,
                              "name": "ImmutableClone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "5001:14:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ImmutableClone_$199_$",
                                "typeString": "type(library ImmutableClone)"
                              }
                            },
                            "id": 66739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5016:18:98",
                            "memberName": "cloneDeterministic",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "5001:33:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (address,bytes memory,bytes32) returns (address)"
                            }
                          },
                          "id": 66746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5001:79:98",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 66737,
                        "name": "IBaseRewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63812,
                        "src": "4987:13:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBaseRewarder_$63812_$",
                          "typeString": "type(contract IBaseRewarder)"
                        }
                      },
                      "id": 66747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4987:94:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "src": "4976:105:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "id": 66749,
                  "nodeType": "ExpressionStatement",
                  "src": "4976:105:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66753,
                        "name": "rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66675,
                        "src": "5107:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      ],
                      "expression": {
                        "id": 66750,
                        "name": "rewarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66709,
                        "src": "5092:9:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr",
                          "typeString": "contract IBaseRewarder[] storage pointer"
                        }
                      },
                      "id": 66752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5102:4:98",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5092:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr_$_t_contract$_IBaseRewarder_$63812_$returns$__$attached_to$_t_array$_t_contract$_IBaseRewarder_$63812_$dyn_storage_ptr_$",
                        "typeString": "function (contract IBaseRewarder[] storage pointer,contract IBaseRewarder)"
                      }
                    },
                    "id": 66754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5092:24:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66755,
                  "nodeType": "ExpressionStatement",
                  "src": "5092:24:98"
                },
                {
                  "expression": {
                    "id": 66760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66756,
                        "name": "_rewarderTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66487,
                        "src": "5126:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IBaseRewarder_$63812_$_t_enum$_RewarderType_$64290_$",
                          "typeString": "mapping(contract IBaseRewarder => enum IRewarderFactory.RewarderType)"
                        }
                      },
                      "id": 66758,
                      "indexExpression": {
                        "id": 66757,
                        "name": "rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66675,
                        "src": "5141:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5126:24:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66759,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66666,
                      "src": "5153:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "src": "5126:39:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "id": 66761,
                  "nodeType": "ExpressionStatement",
                  "src": "5126:39:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66765,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5196:3:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5200:6:98",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5196:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66762,
                        "name": "rewarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66675,
                        "src": "5176:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      },
                      "id": 66764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5185:10:98",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63769,
                      "src": "5176:19:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 66767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5176:31:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66768,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:31:98"
                }
              ]
            },
            "documentation": {
              "id": 66663,
              "nodeType": "StructuredDocumentation",
              "src": "4091:260:98",
              "text": " @dev Clone the rewarder implementation for the given rewarder type and initialize it.\n @param rewarderType The rewarder type.\n @param token The token to reward.\n @param pid The pool ID.\n @return rewarder The rewarder."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_clone",
            "nameLocation": "4365:6:98",
            "parameters": {
              "id": 66672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66666,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "4385:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66770,
                  "src": "4372:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66664,
                      "name": "RewarderType",
                      "nameLocations": [
                        "4372:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "4372:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "4372:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66669,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4406:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66770,
                  "src": "4399:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$46102",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 66668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66667,
                      "name": "IERC20",
                      "nameLocations": [
                        "4399:6:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46102,
                      "src": "4399:6:98"
                    },
                    "referencedDeclaration": 46102,
                    "src": "4399:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$46102",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66671,
                  "mutability": "mutable",
                  "name": "pid",
                  "nameLocation": "4421:3:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66770,
                  "src": "4413:11:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4413:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4371:54:98"
            },
            "returnParameters": {
              "id": 66676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66675,
                  "mutability": "mutable",
                  "name": "rewarder",
                  "nameLocation": "4457:8:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66770,
                  "src": "4443:22:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66674,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66673,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "4443:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "4443:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "4443:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4442:24:98"
            },
            "scope": 66801,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 66800,
            "nodeType": "FunctionDefinition",
            "src": "5414:342:98",
            "nodes": [],
            "body": {
              "id": 66799,
              "nodeType": "Block",
              "src": "5515:241:98",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    },
                    "id": 66783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66780,
                      "name": "rewarderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66774,
                      "src": "5529:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 66781,
                        "name": "RewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64290,
                        "src": "5545:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RewarderType_$64290_$",
                          "typeString": "type(enum IRewarderFactory.RewarderType)"
                        }
                      },
                      "id": 66782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5558:15:98",
                      "memberName": "InvalidRewarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64286,
                      "src": "5545:28:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RewarderType_$64290",
                        "typeString": "enum IRewarderFactory.RewarderType"
                      }
                    },
                    "src": "5529:44:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66787,
                  "nodeType": "IfStatement",
                  "src": "5525:95:98",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66784,
                        "name": "RewarderFactory__InvalidRewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64285,
                        "src": "5582:36:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5582:38:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66786,
                    "nodeType": "RevertStatement",
                    "src": "5575:45:98"
                  }
                },
                {
                  "expression": {
                    "id": 66792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66788,
                        "name": "_implementations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66474,
                        "src": "5631:16:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$",
                          "typeString": "mapping(enum IRewarderFactory.RewarderType => contract IBaseRewarder)"
                        }
                      },
                      "id": 66790,
                      "indexExpression": {
                        "id": 66789,
                        "name": "rewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66774,
                        "src": "5648:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5631:30:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66791,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66777,
                      "src": "5664:14:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                        "typeString": "contract IBaseRewarder"
                      }
                    },
                    "src": "5631:47:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "id": 66793,
                  "nodeType": "ExpressionStatement",
                  "src": "5631:47:98"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66795,
                        "name": "rewarderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66774,
                        "src": "5720:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        }
                      },
                      {
                        "id": 66796,
                        "name": "implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66777,
                        "src": "5734:14:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_RewarderType_$64290",
                          "typeString": "enum IRewarderFactory.RewarderType"
                        },
                        {
                          "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                          "typeString": "contract IBaseRewarder"
                        }
                      ],
                      "id": 66794,
                      "name": "RewarderImplementationSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64311,
                      "src": "5694:25:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_RewarderType_$64290_$_t_contract$_IBaseRewarder_$63812_$returns$__$",
                        "typeString": "function (enum IRewarderFactory.RewarderType,contract IBaseRewarder)"
                      }
                    },
                    "id": 66797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:55:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66798,
                  "nodeType": "EmitStatement",
                  "src": "5689:60:98"
                }
              ]
            },
            "documentation": {
              "id": 66771,
              "nodeType": "StructuredDocumentation",
              "src": "5220:189:98",
              "text": " @dev Sets the rewarder implementation for the given rewarder type.\n @param rewarderType The rewarder type.\n @param implementation The rewarder implementation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRewarderImplementation",
            "nameLocation": "5423:26:98",
            "parameters": {
              "id": 66778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66774,
                  "mutability": "mutable",
                  "name": "rewarderType",
                  "nameLocation": "5463:12:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66800,
                  "src": "5450:25:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RewarderType_$64290",
                    "typeString": "enum IRewarderFactory.RewarderType"
                  },
                  "typeName": {
                    "id": 66773,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66772,
                      "name": "RewarderType",
                      "nameLocations": [
                        "5450:12:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64290,
                      "src": "5450:12:98"
                    },
                    "referencedDeclaration": 64290,
                    "src": "5450:12:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RewarderType_$64290",
                      "typeString": "enum IRewarderFactory.RewarderType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66777,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "5491:14:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 66800,
                  "src": "5477:28:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                    "typeString": "contract IBaseRewarder"
                  },
                  "typeName": {
                    "id": 66776,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66775,
                      "name": "IBaseRewarder",
                      "nameLocations": [
                        "5477:13:98"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63812,
                      "src": "5477:13:98"
                    },
                    "referencedDeclaration": 63812,
                    "src": "5477:13:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBaseRewarder_$63812",
                      "typeString": "contract IBaseRewarder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5449:57:98"
            },
            "returnParameters": {
              "id": 66779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5515:0:98"
            },
            "scope": 66801,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66465,
              "name": "Ownable2StepUpgradeable",
              "nameLocations": [
                "645:23:98"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43724,
              "src": "645:23:98"
            },
            "id": 66466,
            "nodeType": "InheritanceSpecifier",
            "src": "645:23:98"
          },
          {
            "baseName": {
              "id": 66467,
              "name": "IRewarderFactory",
              "nameLocations": [
                "670:16:98"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64372,
              "src": "670:16:98"
            },
            "id": 66468,
            "nodeType": "InheritanceSpecifier",
            "src": "670:16:98"
          }
        ],
        "canonicalName": "RewarderFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66464,
          "nodeType": "StructuredDocumentation",
          "src": "450:166:98",
          "text": " @title Rewarder Factory Contract\n @dev The Rewarder Factory Contract allows users to create veMoe rewarders,\n and admin to create masterchef rewarders."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66801,
          64372,
          43724,
          43919,
          44211,
          44173
        ],
        "name": "RewarderFactory",
        "nameLocation": "626:15:98",
        "scope": 66802,
        "usedErrors": [
          43755,
          43760,
          43936,
          43939,
          64283,
          64285
        ],
        "usedEvents": [
          43619,
          43766,
          43944,
          64303,
          64311
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 98
}